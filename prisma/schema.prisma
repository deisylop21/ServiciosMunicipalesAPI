generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id         Int       @id @default(autoincrement())
  type            UserType
  names           String    @db.VarChar(100)
  father_lastname String    @db.VarChar(100)
  mother_lastname String    @db.VarChar(100)
  email           String    @unique @db.VarChar(150)
  password        String    @db.VarChar(260)
  username        String    @unique @db.VarChar(50)
  birth_date      DateTime?
  phone           String?   @db.VarChar(10)
  recovery_token  String?   @unique
  token_exp       DateTime?
  profile_picture String?
  registration_date DateTime @default(now())
  account_status  AccountStatus @default(Pendiente)
  address         Address[]
  services        UserService[]
  @@map("users")
}

model Comisaria {
    id Int @id @default(autoincrement())
    nombre String @unique
    addresses   Address[]
    colonias Colonia[]
}

model Colonia {
    id Int @id @default(autoincrement())
    nombre String @unique
    comisaria_id Int @map("comisaria_id")
    comisaria    Comisaria  @relation(fields: [comisaria_id], references: [id])
    addresses   Address[]
}

model Address {
    address_id Int @id @default(autoincrement())
    calle String
    user_id Int @map("user_id")
    comisaria_id  Int @map("comisaria_id")
    colonia_id   Int @map("colonia_id")
    cp String
    referencia String?
    user         User    @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
    comisaria    Comisaria @relation(fields: [comisaria_id], references: [id])
    colonia      Colonia   @relation(fields: [colonia_id], references: [id])

    @@map("address")
}


enum UserType {
  administrador
  ciudadano
}

enum AccountStatus {
  Pendiente
  Activo
  Inactivo
}

model UserService {
  id              Int       @id @default(autoincrement())
  user_id Int @map("user_id")
  alias           String
  numero_servicio String @unique
  servicio        ServiceType
  user         User    @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  pagos           PagoUser[]


  @@map("users-servies")
}

model PagoUser {
  id             Int       @id @default(autoincrement())
  id_service     Int       @map("servicio_id")
  monto          Float
  pagado         Boolean
  fecha_servicio DateTime
  fecha_cobro    DateTime @default(now())

  userService    UserService @relation(fields: [id_service], references: [id])

  @@map("pagos-users")
}

enum ServiceType {
  CFE
  CONAGUA
  BASURA
}
